<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>T-25 Capy v/s IBIT v/s BTCUSDT:BINANCE % Returns</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script defer src="https://cloud.umami.is/script.js" data-website-id="5602ec2b-35ca-418d-8899-53ed35d6853f"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns"></script>
    <style>

        p {
            color: #c0c0c0;
            margin-bottom: 2rem;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }
        body {
            background: #121212;
            color: #fff;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            text-align: center;
        }
        h1 {
            margin-bottom: 20px;
            font-size: 24px;
            color: #00ffcc;
        }
        .ibit {
            color: #ff5733;
        }
        .btcusdt {
            color: #FFD700;
        }
        .vs{
            color:#FFFFFF
        }
        canvas {
            max-width: 90%;
            max-height: 80vh;
            background: #1e1e1e;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 15px rgba(0, 255, 204, 0.5);
        }
        #preloader {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: #121212;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            color: #00ffcc;
        }
         .ibit {
            color: #ff5733;
        }
        .btcusdt {
            color: #FFD700;
        }
        .vs{
            color:#FFFFFF
        }
        .pstag{
            color: #FFFFFF
        }

/*         #sharpeLabel {
            position: absolute;
            top: 110px;
            right: 50px;
            color: #00ffcc;
            background: rgba(30, 30, 30, 0.7);
            padding: 6px 12px;
            border-radius: 8px;
            font-size: 14px;
            font-weight: bold;
            box-shadow: 0 0 10px rgba(0, 255, 204, 0.4);
        } */

        #error-message {
            color: #ff5733;
            margin-top: 10px;
            font-size: 16px;
            padding: 10px;
            border-radius: 5px;
            background-color: rgba(255, 87, 51, 0.1);
            display: none;
            max-width: 80%;
            margin: 20px auto;
        }

    </style>
</head>
<body>
    <div id="preloader">Loading data...</div>

    <!-- âœ… Updated Header -->
<!--     <h1>Performance Comparison: T-25 Capy vs IBIT vs BTC/USDT (% Returns)</h1> -->
    <h1><span class='pstag'>Live Performance Comparison: </span>T-25 Capy <span class='vs'>v/s</span> <span class="ibit">IBIT</span> <span class='vs'>v/s</span> <span class="btcusdt">BTC/USDT</span></h1>
    <p>The graph below represents a live cumulative returns comparison between our model T-25 Capy against Blackrock's IBIT ETF and Bitcoin Itself</p>

    <div id="error-message"></div>
    <canvas id="myChart">
        <h3 id="sharpeLabel">Sharpe Ratio: 3.08</h3>
    </canvas>

    <script>
        const urls = [

            "https://clone-ronald-damaged-slots.trycloudflare.com/get_data",


     
            "https://extra-backends.onrender.com/get_data" 
        ];


      

        // Show error message with specific text
        function showError(message) {
            const errorElement = document.getElementById("error-message");
            errorElement.innerText = message;
            errorElement.style.display = "block";
            document.getElementById("preloader").style.display = "none";
        }
        
        // Hide error message
        function hideError() {
            document.getElementById("error-message").style.display = "none";
        }

        async function fetchData(urlIndex = 0) {
            try {
                hideError();
                document.getElementById("preloader").style.display = "flex";
                
                const response = await fetch(urls[urlIndex], {
                    headers: {
                        'Accept': 'application/json',
                        'ngrok-skip-browser-warning': 'true'
                    }
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                
                const data = await response.json();
                document.getElementById("preloader").style.display = "none";

                // Correctly extract values from the array of objects
                const labels = data.map(entry => new Date(entry.DATETIME));
                const ibitData = data.map(entry => entry.IBIT);
                const profitData = data.map(entry => entry["Profit%"]);
                const btcusdtData = data.map(entry => entry.BTCUSDT);


                console.log(data)

                const ctx = document.getElementById('myChart').getContext('2d');
                new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: labels,
                        datasets: [
                            { label: 'T-25 Capy cumulative returns (%)', data: profitData, borderColor: '#00ffcc', backgroundColor: 'rgba(0, 255, 204, 0.2)', borderWidth: 2, tension: 0.4 },
                            { label: 'IBIT cumulative returns (%)', data: ibitData, borderColor: '#ff5733', backgroundColor: 'rgba(255, 87, 51, 0.2)', borderWidth: 2, tension: 0.4 },
                            { label: 'BTCUSDT cumulative returns (%)', data: btcusdtData, borderColor: '#FFD700', backgroundColor: 'rgba(255, 215, 0, 0.2)', borderWidth: 2, tension: 0.4 }
                        ]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            x: {
                                type: 'time',
                                time: { unit: 'day' },
                                ticks: { color: '#fff' },
                                title: {
                                    display: true,
                                    text: 'Trading Days',
                                    color: '#00facc',
                                    font: { size: 20 },
                                    
                                }
                            },
                            y: {
                                ticks: { color: '#fff' },
                                title: {
                                    display: true,
                                    text: '% Change',
                                    color: '#00facc',
                                    font: { size: 20 }
                                }
                            }
                        },
                        plugins: {
                            legend: { labels: { color: '#fff' } }
                        }
                    }
                });
            } catch (error) {
                console.error(`Error with ${urls[urlIndex]}:`, error);
                if (urlIndex + 1 < urls.length) {
                    console.log("Switching to alternate URL...");
                    fetchData(urlIndex + 1);
                } else {
                    const errorMessage = error.message.includes("CORS") || error.message.includes("Failed to fetch") 
                        ? "Unable to connect to the data server. This might be due to server maintenance or connection issues. Please try again later."
                        : `Failed to load data: ${error.message}`;
                    showError(errorMessage);
                    document.getElementById("preloader").style.display = "none";
                }
            }
        }

        fetchData();
    </script>
</body>
</html>
